Option Compare Database
Option Explicit

Private m_db As DAO.Database

Public Property Get CurrentDbC() As DAO.Database
'Öffnet eine DB nur 1x
    If (m_db Is Nothing) Then
      Set m_db = CurrentDb
    End If
    Set CurrentDbC = m_db
End Property

Function funDatensatzVorhanden(strTabellenname As String, strFeld As String, strWert As String) As Boolean
'Die Funktion stellt fest ob ein Datensatz bereits vorhanden ist
Dim rs1 As DAO.Recordset
Dim sqlStr As String
'on error Goto Err_
'Suche letzte Nummer

If strTabellenname = "" Then
    MsgBox ("Sie müssen eine Tabelle Angeben.")
    Exit Function
End If

sqlStr = "SELECT " & strTabellenname & "." & strFeld & _
        " FROM " & strTabellenname & _
        " Where (" & strTabellenname & "." & strFeld & " like '" & strWert & "');"

'Debug.Print sqlStr
Set rs1 = CurrentDbC.OpenRecordset(sqlStr)
'Debug.Print Rs1.RecordCount

If rs1.RecordCount = 0 Then 'Not (Rs1.EOF) And Not (Rs1.BOF) Then
    funDatensatzVorhanden = False
Else
    funDatensatzVorhanden = True
End If

rs1.Close
Set rs1 = Nothing

End Function

Function funTabelleVorhanden(strTabellenname As String) As Boolean
'Die Funktion stellt fest ob eine Tabelle vorhanden ist
Dim rs1 As DAO.Recordset
Dim sqlStr As String

On Error Resume Next

sqlStr = strTabellenname

'Debug.Print sqlStr

Set rs1 = CurrentDbC.OpenRecordset(sqlStr)

'Debug.Print Rs1.RecordCount

funTabelleVorhanden = False

If Err.Number = 0 Then
    funTabelleVorhanden = True
End If

rs1.Close
Set rs1 = Nothing

End Function


Function funNextRecord(strTabellenname As String, strZaehlfeld As String) As Long
'26.10.2004 MG
'Die Function liefert die nächste frei Datensatz Nummer zurück und wird anstelle einer Autonummer verwendet


Dim rs1 As DAO.Recordset
Dim sqlStr As String

'on error Goto Err_
'Suche letzte Nummer

If strTabellenname = "" Then
    MsgBox ("Sie müssen eine Tabelle Angeben.")
    Exit Function
End If

sqlStr = "SELECT TOP 1 " & strTabellenname & "." & strZaehlfeld & _
        " FROM " & strTabellenname & _
        " ORDER BY " & strTabellenname & "." & strZaehlfeld & " DESC;"


Set rs1 = CurrentDbC.OpenRecordset(sqlStr)
    'Wenn noch keine Datensatz vorhanden ist Startnummer fragen
If rs1.RecordCount <> 1 Then
    funNextRecord = Val(InputBox("Bitte geben Sie die Startnummer für das Feld:" & strZaehlfeld & "in der Tabelle" & strTabellenname & " ein."))
Else
    'Wenn Datensaznummer vorhanden Nummer addieren
    funNextRecord = rs1(strZaehlfeld) + 1
End If


rs1.Close
Set rs1 = Nothing

Exit Function
Err_:

MsgErr "modDatenbank", "funLetzterDatensatz", Err.Description, Err.Number, Err.Erl

End Function

Function funAufNrPro(lonPNr As Long) As Long
'Es wird die Auftragsnummer zum Projekt gesucht gibt es mehrere wird 0 zurück gegeben
'Gibt es keinen wird -1 zurück gegeben
Dim rs1 As DAO.Recordset
Dim sSql As String
'on error Goto Err_

'Me!varPrNr = Me!var_pnr
If Nz(lonPNr) = 0 Then
    funAufNrPro = 0
    Exit Function
End If

sSql = " SELECT ProjektNr, ID " & _
    "FROM tblProjekte INNER JOIN tblAufDaten ON tblProjekte.ProjektNr = tblAufDaten.ProNr " & _
    "WHERE ProjektNr = " & lonPNr & " AND (Not Aufabgeschlossen=True)"

Set rs1 = CurrentDbC.OpenRecordset(sSql)

If Not rs1.EOF Then
    rs1.MoveLast
    If rs1.RecordCount = 1 Then
        funAufNrPro = rs1!ID
    Else
        'MsgBox ("Es ist mehr wie ein Auftrag für das Projekt aktiv wählen Sie den richtigen!")
        funAufNrPro = 0
    End If
Else
            funAufNrPro = -1
End If
rs1.Close
Set rs1 = Nothing

Exit_:
Exit Function
Err_:
    MsgErr "fmodDatenbank", "funAufNrPro", Err.Description, Err.Number, Erl()
    Resume Exit_
End Function

Function funQuickCode(strCode As String)
'Aus der Menuetabelle wird die Funktion ausgesucht und aufgerufen
'Die kurznummern werden direkt eingegeben
Dim rs1 As DAO.Recordset
Dim sSql As String
'on error Goto Err_


If strCode <> "" Then
    
    sSql = "SELECT MdAktion, MdTipp, MDQuick " & _
            "FROM t_MenueDat WHERE MDQuick = '" & strCode & "'"
            
    Set rs1 = CurrentDbC.OpenRecordset(sSql)
            
    If rs1.RecordCount = 1 Then
        If Nz(rs1!MdAktion) <> "" Then
            'If Nz(rs1!mdtipp) <> "" Then funQuickCode = rs1!mdtipp
            Eval (Mid(rs1!MdAktion, 2, 50))
        End If
    End If
    rs1.Close
    Set rs1 = Nothing
    
End If
                
Exit_:
Exit Function
Err_:

MsgErr "modDatenbank", "funQuickCode", Err.Description, Err.Number, Erl()
Resume Exit_
        
End Function

Function DAODatabase() As DAO.Database
' Die Function ermöglicht die Nutzung von DAO mit SQL Server
' Aus Buch Microsoft Access mit SQL von Microsoft 093 MG 3.11.2005
' Benötigt Verweise: Microsoft Activ X Dataobjekts Ver2.1

Dim cnn As ADODB.Connection
Dim dbDAO As DAO.Database
Dim strConnect As String

Set cnn = CurrentProject.Connection

'Basiert die Ferbindung auf MSDataShape- Oder SQLOLEDEB-Provider?
If InStr(cnn.Provider, "MSDAtaShape") > 0 Or InStr(cnn.Provider, "SQLOLEDB") > 0 Then
    'Verbindungszeichenkette
    strConnect = "ODBC;driver=SQL Server;server=" & cnn.Properties("SQLOLEDB") & ";"
    'Name der Datenbank
    strConnect = strConnect & "database=" & cnn.Properties("Initial Catalog") & ";"
    'SQL Server- oder Windows Sicherheit?
    If cnn.Properties("Integrated Security") = "SSPI" Then
        strConnect = strConnect & "Trusted_Connection=Yes"
    Else
        strConnect = strConnect & "UID=" & cnn.Properties("ps_user") & ";"
        strConnect = strConnect & "UID=" & cnn.Properties("9001") & ";"
    End If
Else
    MsgBox ("DAO- Datenbank kannnicht göffnet werden!")
    Set DAODatabase = Nothing
    Exit Function
End If
'Neue Datenbank öffnen
Set dbDAO = DBEngine.OpenDatabase("", False, False, strConnect)

Set DAODatabase = dbDAO


End Function

Function funStrFinden(strWert As String) As String
'Die funktion dient zum erweiterten finden von Worten
'zwischen jedem Buchstaben wird ein * eingesetzt und somit auch Worte
'gefunden die nicht ganz der Schreibweise entsprechen

Dim str01 As String
Dim z1 As Long

'on error Goto Err_

If Nz(strWert) <> "" Then
    str01 = "*"
    For z1 = 1 To Len(Nz(strWert))
        str01 = str01 & Mid(strWert, z1, 1) & "*"
    Next z1
End If

funStrFinden = str01

Exit_:
Exit Function
Err_:
MsgErr "funStrFinden", "modDatenbank", Err.Description, Err.Number, Erl()
Resume Exit_

End Function

Function funLetzteDatensatzNr(strDBName As String, strDBFeld As String, Optional StartwertVerwenden As Boolean = True) As Long
'Sucht die letzte eingegebene Datensatz Nummer
'Diese Funktion ist für SQL notwendig da die Datensatz Nr erst nach dem
'erstellen ausgelesen werden Kann

'Die Funktion berücksichtigt gleichzeitig den Startwert 17.01.2006

Dim rs1 As DAO.Recordset
Dim strSql As String
Dim lonHigh As Long

'on error Goto Err_

'Auslesen ob übergabewert damit kein Zeitverzug zwischenspeichern
If StartwertVerwenden Then lonHigh = funStartwert(strDBName)

strSql = "SELECT max(" & strDBFeld & ") as maximum FROM " & strDBName & ";"
Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)

'Fehler Abfangen wenn kein Datensatz besteht 2.2.2008
If IsNull(rs1!Maximum) Then
    funLetzteDatensatzNr = lonHigh
    rs1.Close
    Set rs1 = Nothing
    Exit Function
End If

If lonHigh <= rs1!Maximum Then
    'Der höchste Datensatz wird übergebn
    funLetzteDatensatzNr = rs1!Maximum + 1
Else
    'Die vorgabe wird eingefügt
    funLetzteDatensatzNr = lonHigh
End If
rs1.Close
Set rs1 = Nothing

Exit_:
Exit Function
Err_:
MsgErr "funLetzeDatensatzNr", "modDatenbank", Err.Description, Err.Number, Erl()
funLetzteDatensatzNr = 0
Resume Exit_

End Function

Function funBerichtAuflistung()
'Listet alle Berichte der Datenbank im Direktfenster auf 17.0.2006

Dim I As Byte
Dim strListeneintrag As String
Dim db As Database
Dim Cnt As Container

Set Cnt = CurrentDbC.Containers![Reports]

For I = 0 To Cnt.Documents.Count - 1
    'Debug.Print Cnt.Documents(i).Name
Next I

Set Cnt = Nothing


End Function

Function funStartwert(strTblName As String) As Long
'Die Funktion liest aus der Tabelle Startwerte die Werte aus 17.01.2006
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String


'on error Goto Err_
strSp1 = "ST" & strTblName

strSql = "SELECT tblIni.Kennung, tblIni.Wert1, tblIni.Wert2 FROM tblIni " & _
        "WHERE (((tblIni.Wert1) Like '" & strSp1 & "'));"

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)

If Not rs1.EOF Then
    funStartwert = Nz(rs1!Wert2)
End If
    
rs1.Close
Set rs1 = Nothing
Exit_:
Exit Function
Err_:
    MsgErr "modDatenbank", "funStartwert", Err.Description, Err.Number, Err.Erl
    Resume Exit_


End Function
Function funDbEmail()
'Ermittelt die Email Adresse des aktuellen Benutzers Diesr emuss bei den Benutzer Stammdaten eingegeben werden.
Dim rs1 As DAO.Recordset
Dim sSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


sSql = "SELECT AdressNr, [E-Mail] " & _
         "FROM tblAdressenPersonal WHERE AdressNr =" & funBenutzerNr()

Set rs1 = CurrentDbC.OpenRecordset(sSql)


If Not rs1.EOF Then
    strSp1 = Nz(rs1![E-Mail], "")
Else
    strSp1 = ""
End If
    
rs1.Close
Set rs1 = Nothing
    
funDbEmail = strSp1

End Function







Function funDbTel()
'Ermittelt die Email Adresse des aktuellen Benutzers Diesr emuss bei den Benutzer Stammdaten eingegeben werden.
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


strSql = "SELECT tblAdressenPersonal.AdressNr, tblAdressenPersonal.Durchwahl " & _
         "FROM tblAdressenPersonal WHERE (((tblAdressenPersonal.AdressNr)=" & funBenutzerNr() & "));"

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)


If Not rs1.EOF Then
    strSp1 = Nz(rs1!Durchwahl)
Else
    strSp1 = ""
End If
    
rs1.Close
Set rs1 = Nothing
    
funDbTel = strSp1
End Function

Function fundbName() As String

'Ermittelt die Email Adresse des aktuellen Benutzers Diesr emuss bei den Benutzer Stammdaten eingegeben werden.
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


strSql = "SELECT * " & _
         "FROM tblAdressenPersonal WHERE AdressNr =" & funBenutzerNr()

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)


If Not rs1.EOF Then
    strSp1 = Nz(rs1!Vorname, "") & " " & Nz(rs1!Nachname, "")
End If
    
rs1.Close
Set rs1 = Nothing
    
fundbName = strSp1
End Function



Function funDbVorname() As String

'Ermittelt die Email Adresse des aktuellen Benutzers Diesr emuss bei den Benutzer Stammdaten eingegeben werden.
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


strSql = "SELECT tblAdressenPersonal.AdressNr, tblAdressenPersonal.Vorname " & _
         "FROM tblAdressenPersonal WHERE (((tblAdressenPersonal.AdressNr)=" & funBenutzerNr() & "));"

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)


If Not rs1.EOF Then
    strSp1 = Nz(rs1!Vorname)
Else
    strSp1 = ""
End If
    
rs1.Close
Set rs1 = Nothing
    
funDbVorname = strSp1
End Function

Function funDbNachname()
'Ermittelt die Email Adresse des aktuellen Benutzers Diesr emuss bei den Benutzer Stammdaten eingegeben werden.
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


strSql = "SELECT tblAdressenPersonal.AdressNr, tblAdressenPersonal.Nachname " & _
         "FROM tblAdressenPersonal WHERE (((tblAdressenPersonal.AdressNr)=" & funBenutzerNr() & "));"

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)


If Not rs1.EOF Then
    strSp1 = Nz(rs1!Nachname)
Else
    strSp1 = ""
End If
    
rs1.Close
Set rs1 = Nothing
    
funDbNachname = strSp1
End Function
Function funDbText(lonGruppe As Long, strFeld As String) As String

'Liest einen Text als Standardtext aus den Vorgaben
Dim rs1 As DAO.Recordset
Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long


strSql = "SELECT tblAW.AW_Bez, tblAW.AW_Gruppe, tblAW.AW_Wert " & _
 "FROM tblAW WHERE (((tblAW.AW_Bez) Like '" & strFeld & "') AND ((tblAW.AW_Gruppe)=" & lonGruppe & "));"

Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)


If Not rs1.EOF Then
    strSp1 = Nz(rs1!AW_Wert)
Else
    strSp1 = ""
End If
    
rs1.Close
Set rs1 = Nothing
    
funDbText = strSp1
End Function

Function funArbeitOfline(strTabelle As String, _
                        strFeld As String, _
                        lonWert As Long, _
                        bolNeu As Boolean, _
                        bolDel As Boolean)
Dim rs1 As DAO.Recordset

Dim strSql As String
Dim strSp1 As String
Dim lonBenutzer As Long

GoTo Hupf01

'Ee Wird Geprüft Ob der Änderungssatz schon angelegt wurde
strSql = "SELECT tblArbeitOfline.* " & _
        "FROM tblArbeitOfline " & _
        "WHERE (((tblArbeitOfline.EaTabelle) like '" & strTabelle & "') " & _
        "AND ((tblArbeitOfline.EaIdFeld)like '" & strFeld & "')) " & _
        "AND ((tblArbeitOfline.EaIdWert)=" & CStr(lonWert) & ");"


Set rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges)

'Änderunssatzwurde nicht angelegt neuen Datensatz erzeugen
If rs1.RecordCount = 0 Then ' (Rs1.EOF) And (Rs1.BOF) Then
    rs1.AddNew
    rs1!EATabelle = strTabelle
    rs1!EaIdFeld = strFeld
    rs1!EaIdWert = lonWert
    rs1!EaErfasstAm = Now
    rs1!EaErfasstvon = funBenutzerKurzzeichen
    rs1!eaedit = True
    'Die letze erzeugte Nr wird gesucht
    rs1!EaID = funLetzteDatensatzNr("tblArbeitOfline", "EaId")
    If bolNeu = True Then rs1!eaneu = True
    rs1.Update
    
Else  'Änderungssatz wurde bereits angelegt es wird nur die Änderung vermerkt
    rs1.Edit
    rs1!eaedit = True
    rs1!EaErfasstAm = Now
    rs1!EaErfasstvon = funBenutzerKurzzeichen
    rs1.Update
End If
    
rs1.Close
Set rs1 = Nothing

Hupf01:

End Function


Function funPosNr(Optional strPosNr As String) As String
'Übergibt die markiert Positionsnummer und denkt sich die Nachfolgende aus
Dim strSp1 As String
Dim lonZ As Long

'Wenn 00 am ende Gruppenkopf
If Right(strPosNr, 2) = "00" And Left(strPosNr, 2) <> "00" Then
    strSp1 = Left(strPosNr, 2) & ".10"
    GoTo Ende_
End If
    
'Wenn eine Zwischensumme
If Right(strPosNr, 2) = "ZS" Then
    lonZ = Val(Left(strPosNr, 2)) + 1
    strSp1 = CStr(lonZ)
    If Len(strSp1) = 1 Then strSp1 = "0" & strSp1  'verlängern wenn nur ein Zeichen
    strSp1 = strSp1 & ".00"
    GoTo Ende_
End If
    
'Wenn Preis
If strPosNr = "Preis" Then
    strSp1 = "ZB.00"
    GoTo Ende_
End If
   
'Wenn leer Ziel einfügen
If strPosNr = "" Then
    strSp1 = "00.00"
    GoTo Ende_
End If
   
'Wenn Nach Ziel Position 1 einfügen
If strPosNr = "00.00" Then
    strSp1 = "01.00"
    GoTo Ende_
End If
    
'Wenn Nix von allem dann normale Position
    lonZ = Val(Right(strPosNr, 2)) + 10
    If lonZ > 99 Then lonZ = 99
    strSp1 = CStr(lonZ)
    strSp1 = Left(strPosNr, 2) & "." & strSp1
Ende_:

funPosNr = strSp1

End Function

Function funDBpruefen()
'Prüft ob alle temp Tabellen vorhanden sind
Dim rs1 As DAO.Recordset
Dim strSql As String

'Tabelle Arbeiten extern
If funTabelleVorhanden("tblArbeitOfline") = False Then
strSql = "(CREATE TABLE tblArbeitOfline " & _
        "EaID  integer, " & _
        "EATabelle text," & _
        "EAIDFeld text, " & _
        "EAIDWert integer ," & _
        "EAErfasstAm date, " & _
        "EAErfasstVon text, " & _
        "EAServerUpdate Boolean, " & _
        "EAServerAM Date, " & _
        "EANeu Boolean, " & _
        "EADel Boolean, " & _
        "EAEdit Boolean, " & _
        "PRIMARY KEY EAID);"
        'Debug.Print strSql
'CurrentDbC.Execute strsql, dbFailOnError
End If
Set rs1 = Nothing

End Function

'Function funDBStatus(l_IdNr As Long, l_StatusNr As Long, s_Status As String)
''MsgBox ("nach Eingabe")
''Wird auggerufen wenn ein neuer Wert in die Stückliste eingegeben wird
''Dann soll in den Status eingetragen werden das ein Artikel angelegt wurde.
'Dim Rs1 As DAO.Recordset
'Dim strSql As String
'
''on error Goto Err_
'strSql = "tblStuecklisteStatus"
'Set Rs1 = CurrentDbC.OpenRecordset(strSql, dbOpenDynaset, dbSeeChanges) 'Tabelle in die die Daten geschrieben werden
'If Rs1.Updatable Then
'    Rs1.AddNew
'    Rs1!ID_Nummer = l_IdNr
'    Rs1!Status = s_Status
'    Rs1!StatusNr = l_StatusNr
'    Rs1!Dat_Status = Now
'    Rs1!Benutzer = funBenutzerKurzzeichen '[Forms]![frmDatenbanknutzer]![Kurzzeichen]
'    Rs1.Update
'End If
'Rs1.Close
'Set Rs1 = Nothing
'
'Exit Function
'Err_:
'
'End Function