Option Compare Database
Option Explicit

'Dieser Typ deffiniert die Ablage

Public Type TyAblage
              ProNr As Long     'Projekt ID wenn der Beleg mit einem Projekt in Beziehung steht
           AdressId As Long     'Adress ID wenn der Beleg mit einer Adresse in Beziehung steht
          ArtikelID As Long     'Artikel ID wenn der Beleg mitb einem Artikel in Beziehung steht
           PersonId As Long     'Personal IFD wenn der beleg mit einer Person in Beziehung steht
            BelegId As Long     'Beleg ID wenn ein Beleg
              Datei As String   'Name der Datei
          DateiSize As Long     'Größe der Datei
          DateiType As String   'Type der Datei .PDf   oder Stp usw. immer ohne .
           DateiLog As String   'der name zum einlogen in eine Webseite
          DateiPass As String   'Das Passwort für eine Webseite
         DateiDatum As Date     'Datum der Datei
    DateiAbgelegtAm As Date     'Wann die Datei abgelegt wurde
        Kurzzeichen As String   'Kurzeichn der die Datei abgelegt hat
           Herkunft As String   ' Herkunft
End Type


Public gloAblage As TyAblage




Sub DurchsucheAblage()
'Durchsucht die Ablage nach neuen Dokumenten und legt diese automatisch ab

'Wir gehen davon aus das am Anfang der Datei ein Text steht mit dem die Software ablegen kann

'Folgende Abkürzungen sind möglich
' Pxxxx Projeket
' Axxxxx Artikel

  Dim fs, F, f1, fc, S
    
    Dim l1 As Long
    Dim s1 As String
    Dim Ablage As TyAblage
    
    'Holt den Dateinamen der Ablage
    s1 = funDirDokuTempAblage()
    
    'Wenn Keine Vorgabe abbrechen
    If s1 = "" Or Dir(s1, 16) = "" Then
        Exit Sub
    End If
    
    Set fs = CreateObject("Scripting.FileSystemObject")
    Set F = fs.GetFolder(s1)
    Set fc = F.Files
    
    For Each f1 In fc
        'Endung des Dateinamen herrausfinden
        l1 = InStrRev(f1.Name, ".")
        If l1 = 0 Then
            Ablage.Datei = f1.Name
            
        Else
            Ablage.Datei = Left(f1.Name, l1 - 1)
            Ablage.DateiType = Right(f1.Name, Len(f1.Name) - l1)
        End If
            
            Ablage.DateiAbgelegtAm = Now
            Ablage.DateiDatum = f1.DateCreated
            Ablage.DateiSize = f1.Size
        
    Select Case Mid(Ablage.Datei, 1, 1)
    
        Case "P"  'Prüfe wenn P für Projekt erkannt
            s1 = Mid(Ablage.Datei, 2, 4)
            If Val(s1) > 999 And Val(s1) < 10000 Then    ' Eine projektummer besteht aus 4 Zahlen
                
                If Mid(Ablage.Datei, 6, 1) = " " Then  'Nach der Nummer muss ein Leerzeichen kommen
                    If Nz(DLookup("ProjektNr", "tblProjekte", "ProjektNr=" & Mid(Ablage.Datei, 2, 4))) <> 0 Then 'die Projektnummer muss vorhanden sein
                        Ablage.ProNr = Mid(Ablage.Datei, 2, 4)
                        modAblage.DateiAblegen Ablage    'Datei wird abgelegt
                    End If
                End If
            End If
            
            
        Case "A"  'Prüfe wenn A für Artikel erkannt
            s1 = Mid(Ablage.Datei, 2, 5)
            If Val(s1) > 9999 And Val(s1) < 100000 Then    ' Eine Artikelnummer besteht aus 5 Zahlen
                If Mid(Ablage.Datei, 7, 1) = " " Then   'Nach der Nummer muss ein Leerzeichen kommen
                    If Nz(DLookup("ID", "tblArtikel", "ID=" & Mid(Ablage.Datei, 2, 4))) <> 0 Then 'die Projektnummer muss vorhanden sein
                        Ablage.ArtikelID = Val(Mid(Ablage.Datei, 2, 5))
                        modAblage.DateiAblegen Ablage    'Datei wird abgelegt
                    End If
                End If
            End If
    End Select
        
    Next
    
    Set fs = Nothing
    Set F = Nothing
    Set fc = Nothing
    





End Sub

Function funAblageBeleg(Ablage As TyAblage) As String
'ProNr As Long, AdressID As Long, ArtikelID As Long, PersonID As Long, BelegId As Long, DateiName As String
                        
' Die Funktion legt einen Datensatz in der Datenbank für die Ablage an.
' Das Dokument wird mit verschiedenen Schlüsseln verknüpft
' Die Funktion gibt den Dateinamen zurück
' Es muss gloDruckForm auf das Formular gesetzt sein das den Aufruf macht


'Variablen für erzeugen Ablage zuweisen
'gloAbProNr = Val(Nz(Me.varProNr, 0))
'gloAbAdressId = Val(Nz(Me.varAdresse, 0))
'gloAbArtikelId = Val(Nz(Me.varArtikel, 0))
'gloAbPersonId = Nz(Me.varPerson, 0)
'gloAbBelegId = Nz(Me.varDokument, 0)
'gloAbDatei = Me.varDateiName





Dim rs1 As DAO.Recordset
Dim lNr As Long
Dim s1 As String
Set rs1 = CurrentDb.OpenRecordset("SELECT * FROM t_Ablage WHERE False")


rs1.AddNew
                lNr = funNextRecord("t_Ablage", "AbId")
           rs1!AbiD = lNr
        rs1!fiProNr = Ablage.ProNr           '  Nz(gloAbProNr)
     rs1!fiAdressID = Ablage.AdressId ' Nz(gloAbAdressId)
    rs1!fiArtikelID = Ablage.ArtikelID   '(gloAbArtikelId)
     rs1!fiPersonID = Ablage.PersonId '(gloAbPersonId)
      rs1!fiBelegID = Ablage.BelegId   '(gloAbBelegId)
     rs1!AbHerkunft = Nz(Ablage.Herkunft, "")
    
    If Nz(Ablage.Herkunft) = "link" Then
        s1 = Ablage.Datei  'Wenn link keine Nummer voranstellen weil kein Dokument.
    Else
        s1 = Format(lNr, "000000") & "_" & Ablage.Datei
    End If
    rs1!AbDatei = s1
    
   rs1!ABDateiDatum = Ablage.DateiDatum
    rs1!AbDateiSize = Ablage.DateiSize
    rs1!ABDateiType = Nz(Ablage.DateiType, "")
      rs1!AbLogName = Nz(Ablage.DateiLog)
  rs1!AbLogPassWort = Nz(Ablage.DateiPass)
  
  If Not IsNull(Ablage.Kurzzeichen) Then rs1!AbAngelegtVon = funBenutzerKurzzeichen() Else rs1!AbAngelegtVon = Ablage.Kurzzeichen
rs1.Update
rs1.Close

Set rs1 = Nothing
                        
funAblageBeleg = s1




End Function


Function funAbgelegteBelegAufrufen(s1 As String) As Boolean
'Ruft den Beleg aus dem Ablagesystem auf

Dim s2 As String

If Nz(s1) = "" Then
    funAbgelegteBelegAufrufen = False
    Exit Function
End If

s2 = funDirDokuAblage() & "\" & s1

funRunDatei s2
funAbgelegteBelegAufrufen = True 'Aufrufen der Datei hat funktioniert
'Application.FollowHyperlink S2 ', , True, False


End Function


Function DateiAblegen(Ablage As TyAblage) As String
 Dim s1 As String
 Dim s2 As String
 Dim s3 As String


'Prüft nochmal den übergebenen Dateinamen
     s2 = funDirDokuTempAblage() & "\" & Ablage.Datei & "." & Ablage.DateiType   'funDirDokuTempAblage() & "\" & gloAbDatei
     If s2 = "" Then DateiAblegen = "Kein Datei zum ablegen gefunden.": Exit Function

'Holt das Verzeichnis für die Ablage
    s3 = funDirDokuAblage
    If s3 = "" Then DateiAblegen = "Kein Verzeichnis zum ablegen.": Exit Function
     
'Holt den neuen Dateinamen für die Ablage mit Datenbankeintrag in die Tabellen t_Ablage
    s1 = funAblageBeleg(Ablage)
    
    s1 = s1 & "." & Ablage.DateiType

'Kopiert die Datei in die Ablage
    s3 = s3 & "\" & s1
    FileCopy s2, s3
    
'Kontrolliere ob Datei vorhanden
    If Dir(s3) = "" Then
       DateiAblegen = "Das Kopieren der Datei hat nicht funktioniert.": Exit Function
    End If

'Lösche Temp Datei Datei ist dann nurnoch am Ablageort vorhanden
    Kill (s2)


End Function